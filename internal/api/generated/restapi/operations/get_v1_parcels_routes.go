// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1ParcelsRoutesHandlerFunc turns a function with the right signature into a get v1 parcels routes handler
type GetV1ParcelsRoutesHandlerFunc func(GetV1ParcelsRoutesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1ParcelsRoutesHandlerFunc) Handle(params GetV1ParcelsRoutesParams) middleware.Responder {
	return fn(params)
}

// GetV1ParcelsRoutesHandler interface for that can handle valid get v1 parcels routes params
type GetV1ParcelsRoutesHandler interface {
	Handle(GetV1ParcelsRoutesParams) middleware.Responder
}

// NewGetV1ParcelsRoutes creates a new http.Handler for the get v1 parcels routes operation
func NewGetV1ParcelsRoutes(ctx *middleware.Context, handler GetV1ParcelsRoutesHandler) *GetV1ParcelsRoutes {
	return &GetV1ParcelsRoutes{Context: ctx, Handler: handler}
}

/*
	GetV1ParcelsRoutes swagger:route GET /v1/parcels/routes getV1ParcelsRoutes

routes

Fetches the routes for today's deliveries.
*/
type GetV1ParcelsRoutes struct {
	Context *middleware.Context
	Handler GetV1ParcelsRoutesHandler
}

func (o *GetV1ParcelsRoutes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetV1ParcelsRoutesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
